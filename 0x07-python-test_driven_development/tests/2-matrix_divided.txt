``matrix_divided`` module
=========================

Using matrix_divided
____________________

Importing ``matrix_divided`` from ``2-matrix_divided``

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Using matrix_divided

	Passing int as div

	>>> matrix_divided([[1, 7, 9], [2, 3, 4]], 2)
	[0.5, 3.5, 4.5, 1.0, 1.5, 2.0]
	>>>

	Div being negative

	>>> matrix_divided([[1, 2], [2, 1]], -2)
	[-0.5, -1.0, -1.0, -0.5]

	>>> matrix_divided(1, 7, 9)
	Traceback (most recent call last):

    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

	Adding extra arguments

	>>> matrix_divided([[1, 2, 3], [4, 9, 15]], 2, 3)
	Traceback (most recent call last):

	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

	Not passing a list

	>>> matrix_divided(("hello", 1), 1)
	Traceback (most recent call last):

    TypeError: matrix must be a matrix (list of lists) of integers/floats

	Passing matrix with a list in each row

	Passing None to the matrix

	>>> matrix_divided(None, 1)
	Traceback (most recent call last):

	TypeError: matrix must be a matrix (list of lists) of integers/floats

	Passing None to div

	>>> matrix_divided([[2, 3, 4], [5, 7, 9]], None)
	Traceback (most recent call last):

	TypeError: div must be a number
